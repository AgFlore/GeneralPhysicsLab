%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Repositories\GeneralPhysicsLab\Hall_effect\BI.eps)
%%CreationDate: Mon Dec 25 15:45:06 2017
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Euclid
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -125.00 def
/UnderlineThickness 50.00 def
/StrikeoutPosition 512.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Euclid def
/FontType 3 def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0] def
/FontBBox [-40 -252 1026 898] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 46/s46 put
Encoding 47/s47 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 51/s51 put
Encoding 52/s52 put
Encoding 53/s53 put
Encoding 54/s54 put
Encoding 56/s56 put
Encoding 65/s65 put
/BoundingBoxes 13 dict def
BoundingBoxes begin
/s32 [0 -508 333 1154] def
/s46 [0 -508 278 1154] def
/s47 [0 -508 500 1154] def
/s48 [0 -508 500 1154] def
/s49 [0 -508 500 1154] def
/s50 [0 -508 500 1154] def
/s51 [0 -508 500 1154] def
/s52 [0 -508 500 1154] def
/s53 [0 -508 500 1154] def
/s54 [0 -508 500 1154] def
/s56 [0 -508 500 1154] def
/s65 [0 -508 750 1154] def
end
/Metrics 13 dict def
 Metrics begin
/s32 333 def
/s46 278 def
/s47 500 def
/s48 500 def
/s49 500 def
/s50 500 def
/s51 500 def
/s52 500 def
/s53 500 def
/s54 500 def
/s56 500 def
/s65 750 def
end
/CharProcs 13 dict def
CharProcs begin
/.notdef {} def
/s46 {
191 53 m
191 67.67 185.83 80.17 175.5 90.5 c
165.17 100.83 152.67 106 138 106 c
123.33 106 110.83 100.83 100.5 90.5 c
90.17 80.17 85 67.67 85 53 c
85 38.33 90.17 25.83 100.5 15.5 c
110.83 5.17 123.33 0 138 0 c
152.67 0 165.17 5.17 175.5 15.5 c
185.83 25.83 191 38.33 191 53 c
closepath } bind def
/s47 {
445 723 m
449.67 735.67 445.67 744.33 433 749 c
427.67 751 422.5 750.83 417.5 748.5 c
412.5 746.17 409 742.33 407 737 c
61 -223 407 737 61 -223 c
56.33 -235.67 60.33 -244.33 73 -249 c
78.33 -251 83.5 -250.83 88.5 -248.5 c
93.5 -246.17 97 -242.33 99 -237 c
445 723 99 -237 445 723 c
closepath } bind def
/s48 {
459 318.5 m
459 363.77 456 408.71 450 453.31 c
444 497.92 429.33 539.52 406 578.13 c
389.33 606.08 367 627.72 339 643.03 c
311 658.34 281 666 249 666 c
217 666 187 658.34 159 643.03 c
131 627.72 108.67 606.08 92 578.13 c
68.67 539.52 54 497.92 48 453.31 c
42 408.71 39 363.77 39 318.5 c
39 274.56 42 230.63 48 186.7 c
54 142.76 68.67 101.82 92 63.88 c
108.67 36.58 131 15.45 159 0.47 c
187 -14.51 217 -22 249 -22 c
281 -22 311 -14.51 339 0.47 c
367 15.45 389.33 36.58 406 63.88 c
429.33 101.82 444 142.76 450 186.7 c
456 230.63 459 274.56 459 318.5 c
closepath 376 335 m
376 313.67 375.83 291 375.5 267 c
375.17 243 374.33 219.67 373 197 c
371.67 174.33 369.5 152.83 366.5 132.5 c
363.5 112.17 359.33 95 354 81 c
345.33 57.67 331.67 38.33 313 23 c
294.33 7.67 273 0 249 0 c
225 0 203.67 7.67 185 23 c
166.33 38.33 152.67 57.67 144 81 c
138.67 95 134.5 112.17 131.5 132.5 c
128.5 152.83 126.33 174.33 125 197 c
123.67 219.67 122.83 243 122.5 267 c
122.17 291 122 313.67 122 335 c
122 355 122.17 375.83 122.5 397.5 c
122.83 419.17 123.67 440.5 125 461.5 c
126.33 482.5 128.5 502.33 131.5 521 c
134.5 539.67 138.67 555.67 144 569 c
153.33 590.33 167.33 608.17 186 622.5 c
204.67 636.83 225.67 644 249 644 c
272.33 644 293.33 636.83 312 622.5 c
330.67 608.17 344.67 590.33 354 569 c
359.33 555.67 363.5 539.67 366.5 521 c
369.5 502.33 371.67 482.5 373 461.5 c
374.33 440.5 375.17 419.17 375.5 397.5 c
375.83 375.83 376 355 376 335 c
closepath } bind def
/s49 {
419 0 m
419 31 419 0 419 31 c
410.33 31 401 31 391 31 c
381 31 371.17 31.17 361.5 31.5 c
351.83 31.83 343 32.5 335 33.5 c
327 34.5 320.33 35.67 315 37 c
308.33 38.33 303.17 41.83 299.5 47.5 c
295.83 53.17 294 59.67 294 67 c
294 657 294 67 294 657 c
294 664.33 290.33 668 283 668 c
271 668 283 668 271 668 c
247.67 643.33 220 626.33 188 617 c
156 607.67 123 603 89 603 c
89 572 89 603 89 572 c
112.33 572 135.17 574.07 157.5 578.2 c
179.83 582.34 200.67 589.22 220 598.86 c
220 67 220 598.86 220 67 c
220 59.67 218.17 53.17 214.5 47.5 c
210.83 41.83 205.67 38.33 199 37 c
193.67 35.67 186.83 34.5 178.5 33.5 c
170.17 32.5 161.33 31.83 152 31.5 c
142.67 31.17 133 31 123 31 c
113 31 103.67 31 95 31 c
95 0 95 31 95 0 c
203 4 311 4 419 0 c
closepath } bind def
/s50 {
448 174 m
421 174 448 174 421 174 c
419.67 166 418.17 157.33 416.5 148 c
414.83 138.67 413 129.67 411 121 c
409 112.33 406.83 104.5 404.5 97.5 c
402.17 90.5 399.67 85.67 397 83 c
395.67 81.67 388.83 80.5 376.5 79.5 c
364.17 78.5 349.5 77.83 332.5 77.5 c
315.5 77.17 297.33 77 278 77 c
258.67 77 241.67 77 227 77 c
126 77 227 77 126 77 c
241 189 126 77 241 189 c
260.33 207.67 281.83 227 305.5 247 c
329.17 267 351.5 288.33 372.5 311 c
393.5 333.67 411 358.17 425 384.5 c
439 410.83 446 440 446 472 c
446 500 440.86 525.83 430.58 549.5 c
420.3 573.17 405.87 593.83 387.3 611.5 c
368.72 629.17 346.34 642.83 320.13 652.5 c
293.93 662.17 265.24 667 234.08 667 c
208.87 667 184.99 662.17 162.44 652.5 c
139.89 642.83 120.32 629.67 103.73 613 c
87.15 596.33 74.05 576.67 64.43 554 c
54.81 531.33 50 507.33 50 482 c
50 464.67 55.5 451.5 66.5 442.5 c
77.5 433.5 89.33 429 102 429 c
115.33 429 127.5 433.5 138.5 442.5 c
149.5 451.5 155 464.67 155 482 c
155 492 152.83 500.67 148.5 508 c
144.17 515.33 138.83 521.17 132.5 525.5 c
126.17 529.83 119 532.5 111 533.5 c
103 534.5 95.33 534 88 532 c
98 562 115.33 586.83 140 606.5 c
164.67 626.17 193 636 225 636 c
247 636 266.17 631.5 282.5 622.5 c
298.83 613.5 312.5 601.5 323.5 586.5 c
334.5 571.5 342.83 554.17 348.5 534.5 c
354.17 514.83 357 494 357 472 c
357 445.33 352.5 419.83 343.5 395.5 c
334.5 371.17 322.67 347.83 308 325.5 c
293.33 303.17 276.83 281.17 258.5 259.5 c
240.17 237.83 221.67 216.67 203 196 c
52 27 203 196 52 27 c
50.67 24.33 50 22.33 50 21 c
50 0 50 21 50 0 c
420 0 50 0 420 0 c
448 174 420 0 448 174 c
closepath } bind def
/s51 {
456 171 m
456 196.33 450.5 220.5 439.5 243.5 c
428.5 266.5 413.33 286.33 394 303 c
378.67 316.33 362.17 327 344.5 335 c
326.83 343 308.33 348.67 289 352 c
309 358.67 327.5 367.67 344.5 379 c
361.5 390.33 376.17 403.67 388.5 419 c
400.83 434.33 410.67 451.33 418 470 c
425.33 488.67 429 508.67 429 530 c
429 550.67 423.67 569.33 413 586 c
402.33 602.67 389 616.67 373 628 c
354.33 641.33 334 651.17 312 657.5 c
290 663.83 267.33 667 244 667 c
222 667 200.5 663.83 179.5 657.5 c
158.5 651.17 139.83 642 123.5 630 c
107.17 618 94 603.5 84 586.5 c
74 569.5 69 550.33 69 529 c
69 512.33 74.33 499.83 85 491.5 c
95.67 483.17 107.33 479 120 479 c
132.67 479 144.33 483.17 155 491.5 c
165.67 499.83 171 512.33 171 529 c
171 548.33 164.17 562.33 150.5 571 c
136.83 579.67 123 582.33 109 579 c
121 598.33 139.17 613.67 163.5 625 c
187.83 636.33 214.67 642 244 642 c
272 642 295 631.3 313 609.89 c
322.33 599.18 328.5 586.97 331.5 573.26 c
334.5 559.54 336 544.99 336 529.59 c
336 508.85 333.83 488.62 329.5 468.88 c
325.17 449.15 318.67 431.59 310 416.2 c
301.33 400.8 290.5 388.26 277.5 378.55 c
264.5 368.85 249.33 363.33 232 362 c
222.67 360.72 213.33 360.08 204 360.08 c
194.67 360.08 185.33 359.44 176 358.16 c
173.33 358.16 171 357.2 169 355.27 c
167 353.35 166.33 351.1 167 348.53 c
167 345.66 167 348.53 167 345.66 c
167 339.89 170 337 176 337 c
244 337 176 337 244 337 c
260.67 337 276 332.67 290 324 c
304 315.33 315.67 304 325 290 c
336.33 272.67 344 253.83 348 233.5 c
352 213.17 354 192.33 354 171 c
354 149.67 352 128.83 348 108.5 c
344 88.17 336.33 69.33 325 52 c
315.67 38 304 26.83 290 18.5 c
276 10.17 260.67 6 244 6 c
210 6 178.67 12.83 150 26.5 c
121.33 40.17 100.33 59 87 83 c
94.33 81.67 102 81.83 110 83.5 c
118 85.17 125.17 88.33 131.5 93 c
137.83 97.67 143 103.67 147 111 c
151 118.33 153 127.33 153 138 c
153 156.67 147.17 170.5 135.5 179.5 c
123.83 188.5 111 193 97 193 c
83.67 193 71.17 188.5 59.5 179.5 c
47.83 170.5 42 156.67 42 138 c
42 112.67 47.67 90.17 59 70.5 c
70.33 50.83 85.5 34.17 104.5 20.5 c
123.5 6.83 145.17 -3.67 169.5 -11 c
193.83 -18.33 218.67 -22 244 -22 c
272 -22 298.83 -17.33 324.5 -8 c
350.17 1.33 373.33 15.33 394 34 c
413.33 51.33 428.5 72 439.5 96 c
450.5 120 456 145 456 171 c
closepath } bind def
/s52 {
470 166 m
470 197 470 166 470 197 c
370 197 470 197 370 197 c
370 667 370 197 370 667 c
370 674.33 366.33 678 359 678 c
349 678 359 678 349 678 c
344.33 678 340.67 676 338 672 c
28 197 338 672 28 197 c
28 166 28 197 28 166 c
293 166 28 166 293 166 c
293 67 293 166 293 67 c
293 60.33 291.67 54.17 289 48.5 c
286.33 42.83 282.33 39 277 37 c
268.33 33.67 256 31.83 240 31.5 c
224 31.17 209 31 195 31 c
195 0 195 31 195 0 c
286.33 4 377 4 467 0 c
467 31 467 0 467 31 c
453.67 31 438.83 31.17 422.5 31.5 c
406.17 31.83 394 33.67 386 37 c
380.67 39 376.67 42.83 374 48.5 c
371.33 54.17 370 60.33 370 67 c
370 166 370 67 370 166 c
470 166 370 166 470 166 c
closepath 298 197 m
56 197 298 197 56 197 c
298 568 56 197 298 568 c
298 197 298 568 298 197 c
closepath } bind def
/s53 {
448 200.5 m
448 228.44 443.5 255.71 434.5 282.31 c
425.5 308.92 412 332.86 394 354.16 c
376.67 374.1 356.5 390.07 333.5 402.04 c
310.5 414.01 286 420 260 420 c
233.33 420 209.33 415.5 188 406.5 c
166.67 397.5 148 384.67 132 368 c
132 565 132 368 132 565 c
158.67 556.33 187.67 552 219 552 c
256.33 552 291.67 560.5 325 577.5 c
358.33 594.5 385.67 618.33 407 649 c
408.33 650.33 409 653 409 657 c
409 663.67 405.67 667 399 667 c
398.33 667 397.67 666.83 397 666.5 c
396.33 666.17 395.67 666 395 666 c
350.33 644.67 303.67 634 255 634 c
206.33 634 159.67 644.67 115 666 c
114.33 666 113.67 666.17 113 666.5 c
112.33 666.83 111.67 667 111 667 c
104.33 665.67 101 662 101 656 c
101 330 101 656 101 330 c
101 322.67 105 319 113 319 c
117 319 113 319 117 319 c
121 319 124 321 126 325 c
140 348.33 158.17 366.33 180.5 379 c
202.83 391.67 229.33 398 260 398 c
276 398 290.67 392.83 304 382.5 c
317.33 372.17 328.33 359 337 343 c
348.33 321.67 354.83 299 356.5 275 c
358.17 251 359 226.33 359 201 c
359 175.67 357.17 150.83 353.5 126.5 c
349.83 102.17 341.33 80 328 60 c
316.67 43.33 302.33 30.17 285 20.5 c
267.67 10.83 249.33 6 230 6 c
194.67 6 163.5 16.67 136.5 38 c
109.5 59.33 91.33 86.33 82 119 c
88.67 116.33 96 115.33 104 116 c
112 116.67 119.17 119 125.5 123 c
131.83 127 137.17 132.5 141.5 139.5 c
145.83 146.5 148 155 148 165 c
148 181.67 142.83 194 132.5 202 c
122.17 210 111 214 99 214 c
87 214 75.83 210 65.5 202 c
55.17 194 50 181.67 50 165 c
50 139.67 54.67 115.67 64 93 c
73.33 70.33 86 50.5 102 33.5 c
118 16.5 137 3 159 -7 c
181 -17 204.67 -22 230 -22 c
259.33 -22 287.17 -16.35 313.5 -5.04 c
339.83 6.27 363.33 22.23 384 42.86 c
404.67 64.14 420.5 88.25 431.5 115.19 c
442.5 142.13 448 170.56 448 200.5 c
closepath } bind def
/s54 {
456 203 m
456 235 451.67 263.33 443 288 c
434.33 312.67 419.33 337 398 361 c
378 383 357 399.33 335 410 c
313 420.67 286.67 426 256 426 c
225.33 426 199.67 416.67 179 398 c
158.33 379.33 142.33 355.67 131 327 c
131.67 367 133.83 406 137.5 444 c
141.17 482 152.33 517.67 171 551 c
185.67 577 204.5 598.67 227.5 616 c
250.5 633.33 276.33 642 305 642 c
325.67 642 343.83 638.5 359.5 631.5 c
375.17 624.5 387 614.33 395 601 c
381.67 603.67 369.17 601.17 357.5 593.5 c
345.83 585.83 340 573.33 340 556 c
340 540.67 344.67 529.17 354 521.5 c
363.33 513.83 373.67 510 385 510 c
397 510 407.67 513.83 417 521.5 c
426.33 529.17 431 540.67 431 556 c
431 592 419 619.5 395 638.5 c
371 657.5 341 667 305 667 c
267 667 232 657.5 200 638.5 c
168 619.5 140.67 595 118 565 c
91.33 529.67 72 491.33 60 450 c
48 408.67 42 366.33 42 323 c
42 279.67 45.17 236.33 51.5 193 c
57.83 149.67 72.33 108.67 95 70 c
111 42 132.5 19.67 159.5 3 c
186.5 -13.67 216.33 -22 249 -22 c
280.33 -22 307.33 -16.67 330 -6 c
352.67 4.67 374.67 21.33 396 44 c
418 68 433.5 92.5 442.5 117.5 c
451.5 142.5 456 171 456 203 c
closepath 367 203 m
367 173.67 365.83 147.33 363.5 124 c
361.17 100.67 354.33 79.33 343 60 c
331.67 41.33 318.5 27.67 303.5 19 c
288.5 10.33 270.33 6 249 6 c
227 6 207.33 13.33 190 28 c
172.67 42.67 159.67 61.33 151 84 c
145.67 97.33 141.83 114.17 139.5 134.5 c
137.17 154.83 135.33 176.67 134 200 c
134 204 134 200 134 204 c
132 230 133.33 255 138 279 c
142.67 303 150.17 324.17 160.5 342.5 c
170.83 360.83 183.83 375.67 199.5 387 c
215.17 398.33 233.67 404 255 404 c
275.67 404 293 399.33 307 390 c
321 380.67 333.67 366.67 345 348 c
355.67 329.33 362 308 364 284 c
366 260 367 233 367 203 c
closepath } bind def
/s56 {
456 168 m
456 200 448 229.67 432 257 c
416 284.33 394.67 306.67 368 324 c
308 363 368 324 308 363 c
324 371 339.33 380.17 354 390.5 c
368.67 400.83 381.5 412.5 392.5 425.5 c
403.5 438.5 412.33 452.67 419 468 c
425.67 483.33 429 500 429 518 c
429 540.67 424 561.17 414 579.5 c
404 597.83 390.5 613.5 373.5 626.5 c
356.5 639.5 337.17 649.5 315.5 656.5 c
293.83 663.5 271.67 667 249 667 c
225 667 202.17 662.67 180.5 654 c
158.83 645.33 139.67 633.5 123 618.5 c
106.33 603.5 93.17 585.83 83.5 565.5 c
73.83 545.17 69 523 69 499 c
69 470.33 76.17 444 90.5 420 c
104.83 396 123.67 376.33 147 361 c
187 335 147 361 187 335 c
167 325.67 148.33 314.83 131 302.5 c
113.67 290.17 98.33 276.33 85 261 c
71.67 245.67 61.17 228.83 53.5 210.5 c
45.83 192.17 42 172 42 150 c
42 124 47.83 100.33 59.5 79 c
71.17 57.67 86.5 39.5 105.5 24.5 c
124.5 9.5 146.5 -2 171.5 -10 c
196.5 -18 222.33 -22 249 -22 c
277 -22 303.5 -17.17 328.5 -7.5 c
353.5 2.17 375.5 15.5 394.5 32.5 c
413.5 49.5 428.5 69.5 439.5 92.5 c
450.5 115.5 456 140.67 456 168 c
closepath 384 518 m
384 487.33 374.67 460.17 356 436.5 c
337.33 412.83 313.67 393 285 377 c
163 456 285 377 163 456 c
148.33 465.33 136.5 477 127.5 491 c
118.5 505 114 520.33 114 537 c
114 552.33 117.67 566.5 125 579.5 c
132.33 592.5 142.17 603.67 154.5 613 c
166.83 622.33 181.17 629.5 197.5 634.5 c
213.83 639.5 231 642 249 642 c
267 642 284.17 638.83 300.5 632.5 c
316.83 626.17 331.17 617.5 343.5 606.5 c
355.83 595.5 365.67 582.33 373 567 c
380.33 551.67 384 535.33 384 518 c
closepath 406 133 m
406 114.33 401.83 97.17 393.5 81.5 c
385.17 65.83 373.67 52.5 359 41.5 c
344.33 30.5 327.5 21.83 308.5 15.5 c
289.5 9.17 269.67 6 249 6 c
227.67 6 207.5 9.67 188.5 17 c
169.5 24.33 152.83 34.5 138.5 47.5 c
124.17 60.5 112.83 75.83 104.5 93.5 c
96.17 111.17 92 130 92 150 c
92 187.33 103.17 220.67 125.5 250 c
147.83 279.33 176 302.67 210 320 c
347 232 210 320 347 232 c
364.33 220.67 378.5 206.33 389.5 189 c
400.5 171.67 406 153 406 133 c
closepath } bind def
/s65 {
716 0 m
716 31 716 0 716 31 c
702.67 31 688.83 31.17 674.5 31.5 c
660.17 31.83 648.67 33.67 640 37 c
633.33 39 628 42.83 624 48.5 c
620 54.17 617 60.33 615 67 c
394 706 615 67 394 706 c
391.33 713.33 386 717 378 717 c
370 717 378 717 370 717 c
362 717 356.67 713.33 354 706 c
143 94 354 706 143 94 c
135.67 73.33 122.67 57.67 104 47 c
92.67 40.33 81 36 69 34 c
57 32 44.67 31 32 31 c
32 0 32 31 32 0 c
68 2 104 2.83 140 2.5 c
176 2.17 212 1.33 248 0 c
248 31 248 0 248 31 c
237.33 31 226.83 32.33 216.5 35 c
206.17 37.67 196.67 42.67 188 50 c
181.33 55.33 176.67 62 174 70 c
171.33 78 171.67 86 175 94 c
221 228 175 94 221 228 c
468 228 221 228 468 228 c
524 67 468 228 524 67 c
526 61.67 525.33 56.5 522 51.5 c
518.67 46.5 514.33 42.67 509 40 c
499 36 488 33.5 476 32.5 c
464 31.5 452.33 31 441 31 c
441 0 441 31 441 0 c
487 1.33 532.83 2.17 578.5 2.5 c
624.17 2.83 670 2 716 0 c
closepath 457 259 m
232 259 457 259 232 259 c
345 585 232 259 345 585 c
457 259 345 585 457 259 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Euclid exch definefont pop
%%EndFont
%%BeginFont: /MC2_EuclidItalic
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 11 def
/UnderlinePosition -125.00 def
/UnderlineThickness 50.00 def
/StrikeoutPosition 512.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_EuclidItalic def
/FontType 3 def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0] def
/FontBBox [-28 -252 1350 899] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 66/s66 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -508 656 1155] def
/s66 [0 -508 1027 1155] def
end
/Metrics 3 dict def
 Metrics begin
/s32 333 def
/s66 704 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s66 {
730 514 m
736 537.33 736.17 559.33 730.5 580 c
724.83 600.67 714.67 618.67 700 634 c
684.67 650.67 665.5 663 642.5 671 c
619.5 679 595 683 569 683 c
245 683 569 683 245 683 c
241.67 683 238.67 682 236 680 c
233.33 678 231.67 675.33 231 672 c
229 664 231 672 229 664 c
227.67 660.67 227.83 658 229.5 656 c
231.17 654 233.67 653 237 653 c
252.33 653 266.83 652.67 280.5 652 c
294.17 651.33 303.67 649.33 309 645.98 c
314.33 643.32 315 633.64 311 616.94 c
174 66.06 311 616.94 174 66.06 c
170 50.03 164.33 40.02 157 36.02 c
149.67 32.67 139.17 30.83 125.5 30.5 c
111.83 30.17 97.33 30 82 30 c
74 30 69.33 26.13 68 18.39 c
66 10.64 68 18.39 66 10.64 c
64.67 7.42 64.83 4.84 66.5 2.91 c
68.17 0.97 70.67 0 74 0 c
424 0 74 0 424 0 c
450.67 0 477.5 4.5 504.5 13.5 c
531.5 22.5 557 36 581 54 c
603.67 70.67 623.17 90.17 639.5 112.5 c
655.83 134.83 667 158.33 673 183 c
679 207 679.33 229.83 674 251.5 c
668.67 273.17 658.67 291.67 644 307 c
630.67 321.67 615.17 333.17 597.5 341.5 c
579.83 349.83 560.33 355 539 357 c
556.33 360.33 573.67 365.33 591 372 c
608.33 378.67 625.33 387.67 642 399 c
663.33 413 682 430 698 450 c
714 470 724.67 491.33 730 514 c
closepath 641 514 m
631.67 474 609.33 439.33 574 410 c
557.33 396 539.67 385.17 521 377.5 c
502.33 369.83 483.33 366 464 366 c
324 366 464 366 324 366 c
386 617 324 366 386 617 c
390 633.67 394.33 644 399 648 c
402.33 651.33 413.33 653 432 653 c
561 653 432 653 561 653 c
577 653 591 649.33 603 642 c
615 634.67 624.67 624.67 632 612 c
640 598 644.67 582.5 646 565.5 c
647.33 548.5 645.67 531.33 641 514 c
closepath 581 182.48 m
575.67 163.09 567.5 144.03 556.5 125.3 c
545.5 106.58 531.33 89.53 514 74.14 c
498 60.77 480.67 50.07 462 42.04 c
443.33 34.01 424.67 30 406 30 c
276 30 406 30 276 30 c
258 30 248 31.34 246 34.02 c
243.33 37.36 244.33 48.06 249 66.11 c
318 344 249 66.11 318 344 c
497 344 318 344 497 344 c
514.33 344 529.5 339.65 542.5 330.96 c
555.5 322.27 565.67 310.9 573 296.84 c
581.67 280.79 586.5 262.9 587.5 243.17 c
588.5 223.44 586.33 203.21 581 182.48 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_EuclidItalic exch definefont pop
%%EndFont
%%BeginFont: /MC3_Euclid
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -125.00 def
/UnderlineThickness 50.00 def
/StrikeoutPosition 512.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Euclid def
/FontType 3 def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0] def
/FontBBox [-40 -252 1026 898] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 47/s47 put
Encoding 84/s84 put
Encoding 109/s109 put
/BoundingBoxes 5 dict def
BoundingBoxes begin
/s32 [0 -508 333 1154] def
/s47 [0 -508 500 1154] def
/s84 [0 -508 722 1154] def
/s109 [0 -508 833 1154] def
end
/Metrics 5 dict def
 Metrics begin
/s32 333 def
/s47 500 def
/s84 722 def
/s109 833 def
end
/CharProcs 5 dict def
CharProcs begin
/.notdef {} def
/s47 {
445 723 m
449.67 735.67 445.67 744.33 433 749 c
427.67 751 422.5 750.83 417.5 748.5 c
412.5 746.17 409 742.33 407 737 c
61 -223 407 737 61 -223 c
56.33 -235.67 60.33 -244.33 73 -249 c
78.33 -251 83.5 -250.83 88.5 -248.5 c
93.5 -246.17 97 -242.33 99 -237 c
445 723 99 -237 445 723 c
closepath } bind def
/s84 {
684 453 m
665 678 684 453 665 678 c
56 678 665 678 56 678 c
36 453 56 678 36 453 c
61 453 36 453 61 453 c
62.33 467 63.83 481.83 65.5 497.5 c
67.17 513.17 69.33 528.17 72 542.5 c
74.67 556.83 78.33 570.17 83 582.5 c
87.67 594.83 93.67 604.67 101 612 c
116.33 627.33 134.5 637 155.5 641 c
176.5 645 197.67 647 219 647 c
264 647 219 647 264 647 c
271.33 647 279.33 646.83 288 646.5 c
296.67 646.17 303 644.33 307 641 c
311.67 637.67 314.33 633.17 315 627.5 c
315.67 621.83 316 616.33 316 611 c
316 67 316 611 316 67 c
316 59.67 313.67 53.17 309 47.5 c
304.33 41.83 298.33 38.33 291 37 c
285 35.67 277.17 34.5 267.5 33.5 c
257.83 32.5 247.5 31.83 236.5 31.5 c
225.5 31.17 214 31 202 31 c
190.67 31 180 31 170 31 c
170 0 170 31 170 0 c
296.67 4 423.33 4 550 0 c
550 31 550 0 550 31 c
540 31 529 31 517 31 c
505.67 31 494.5 31.17 483.5 31.5 c
472.5 31.83 462.17 32.5 452.5 33.5 c
442.83 34.5 435 35.67 429 37 c
421.67 38.33 415.83 41.83 411.5 47.5 c
407.17 53.17 405 59.67 405 67 c
405 611 405 67 405 611 c
405 616.33 405.33 621.83 406 627.5 c
406.67 633.17 409 637.67 413 641 c
417.67 644.33 424.17 646.17 432.5 646.5 c
440.83 646.83 448.67 647 456 647 c
501 647 456 647 501 647 c
522.33 647 543.67 645 565 641 c
586.33 637 604.67 627.33 620 612 c
627.33 604.67 633.17 594.83 637.5 582.5 c
641.83 570.17 645.5 556.83 648.5 542.5 c
651.5 528.17 653.67 513.17 655 497.5 c
656.33 481.83 657.67 467 659 453 c
684 453 659 453 684 453 c
closepath } bind def
/s109 {
810 0 m
810 31 810 0 810 31 c
799.33 31 787.67 31.17 775 31.5 c
762.33 31.83 752.67 33.67 746 37 c
740.67 39.67 737.17 43.83 735.5 49.5 c
733.83 55.17 733 61 733 67 c
733 305 733 67 733 305 c
733 323 730.83 341.17 726.5 359.5 c
722.17 377.83 713 394 699 408 c
685 422 668.5 431.17 649.5 435.5 c
630.5 439.83 612 442 594 442 c
562 442 533.67 432.83 509 414.5 c
484.33 396.17 465.67 372.67 453 344 c
451 355.33 447.67 366.5 443 377.5 c
438.33 388.5 431.33 398.67 422 408 c
408 422 391.67 431.17 373 435.5 c
354.33 439.83 336 442 318 442 c
284 442 254.5 432.17 229.5 412.5 c
204.5 392.83 186 368 174 338 c
174 431 174 338 174 431 c
174 442 174 431 174 442 c
112 437 174 442 112 437 c
32 431 112 437 32 431 c
32 400 32 431 32 400 c
43.33 400 55.33 399.67 68 399 c
80.67 398.33 90.33 395.67 97 391 c
103.67 385.67 107.5 378.83 108.5 370.5 c
109.5 362.17 110 353.33 110 344 c
110 67 110 344 110 67 c
110 61 109.17 55.17 107.5 49.5 c
105.83 43.83 102.33 39.67 97 37 c
90.33 33.67 80.67 31.83 68 31.5 c
55.33 31.17 43.33 31 32 31 c
32 0 32 31 32 0 c
68.67 2 106 3 144 3 c
175 3 144 3 175 3 c
188.33 2.33 202 1.83 216 1.5 c
230 1.17 243.67 0.67 257 0 c
257 31.08 257 0 257 31.08 c
245.67 31.08 233.67 31.24 221 31.58 c
208.33 31.91 198.67 33.75 192 37.09 c
186.67 39.76 183.17 43.93 181.5 49.62 c
179.83 55.3 179 61.15 179 67.16 c
179 265.63 179 67.16 179 265.63 c
179 286.34 182.5 306.06 189.5 324.77 c
196.5 343.49 206 359.86 218 373.89 c
230 387.92 244.33 399.11 261 407.47 c
277.67 415.82 295.67 420 315 420 c
326.33 420 336.67 417.99 346 413.98 c
355.33 409.97 362.67 403.63 368 394.94 c
376.67 382.24 381.83 368.37 383.5 353.34 c
385.17 338.3 386 322.43 386 305.73 c
386 67.16 386 305.73 386 67.16 c
386 61.15 385.33 55.3 384 49.62 c
382.67 43.93 379.33 39.76 374 37.09 c
367.33 33.75 357.67 31.91 345 31.58 c
332.33 31.24 320.33 31.08 309 31.08 c
309 0 309 31.08 309 0 c
345.67 2 383 3 421 3 c
458.33 3 496 2 534 0 c
534 31.08 534 0 534 31.08 c
522.67 31.08 510.67 31.24 498 31.58 c
485.33 31.91 475.67 33.75 469 37.09 c
463.67 39.76 460.17 43.93 458.5 49.62 c
456.83 55.3 456 61.15 456 67.16 c
456 265.63 456 67.16 456 265.63 c
456 286.34 459.5 306.06 466.5 324.77 c
473.5 343.49 483 359.86 495 373.89 c
507 387.92 521.33 399.11 538 407.47 c
554.67 415.82 572.67 420 592 420 c
603.33 420 613.67 417.99 623 413.98 c
632.33 409.97 639.67 403.63 645 394.94 c
653 382.24 658 368.37 660 353.34 c
662 338.3 663 322.43 663 305.73 c
663 67.16 663 305.73 663 67.16 c
663 61.15 662.17 55.3 660.5 49.62 c
658.83 43.93 655.33 39.76 650 37.09 c
643.33 33.75 633.67 31.91 621 31.58 c
608.33 31.24 596.33 31.08 585 31.08 c
585 0 585 31.08 585 0 c
623 2 660.67 3 698 3 c
735.33 3 772.67 2 810 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Euclid exch definefont pop
%%EndFont
%%BeginFont: /MC4_EuclidItalic
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 11 def
/UnderlinePosition -125.00 def
/UnderlineThickness 50.00 def
/StrikeoutPosition 512.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC4_EuclidItalic def
/FontType 3 def
/FontMatrix [1 1000 div 0 0 1 1000 div 0 0] def
/FontBBox [-28 -252 1350 899] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 73/s73 put
Encoding 77/s77 put
/BoundingBoxes 4 dict def
BoundingBoxes begin
/s32 [0 -508 656 1155] def
/s73 [0 -508 708 1155] def
/s77 [0 -508 1219 1155] def
end
/Metrics 4 dict def
 Metrics begin
/s32 333 def
/s73 385 def
/s77 896 def
end
/CharProcs 4 dict def
CharProcs begin
/.notdef {} def
/s73 {
500 672 m
501.33 675.33 501.17 678 499.5 680 c
497.83 682 495.33 683 492 683 c
406 679.67 320.33 679.67 235 683 c
228.33 683 223.67 679.33 221 672 c
219 664 221 672 219 664 c
217.67 656.67 220.67 653 228 653 c
243.33 653 258.33 652.67 273 652 c
287.67 651.33 298 649.33 304 645.99 c
310 642.65 311 632.97 307 616.94 c
169 66.06 307 616.94 169 66.06 c
165 50.03 159.33 40.02 152 36.02 c
144.67 32.67 133.5 30.83 118.5 30.5 c
103.5 30.17 88 30 72 30 c
64.67 30 60 26.13 58 18.39 c
56 10.64 58 18.39 56 10.64 c
54.67 3.55 57.33 0 64 0 c
151.33 4 237 4 321 0 c
327.67 0 332.33 3.55 335 10.64 c
337 18.39 335 10.64 337 18.39 c
339 26.13 336.33 30 329 30 c
313 30 297.67 30.17 283 30.5 c
268.33 30.83 258.33 32.67 253 36.02 c
247 39.35 246 49.36 250 66.06 c
387 616.94 250 66.06 387 616.94 c
391 633.64 397 643.32 405 645.98 c
412.33 649.33 423.5 651.33 438.5 652 c
453.5 652.67 468.67 653 484 653 c
487.33 653 490.33 654 493 656 c
495.67 658 497.33 660.67 498 664 c
500 672 498 664 500 672 c
closepath } bind def
/s77 {
1002 672 m
1003.33 675.33 1003.17 678 1001.5 680 c
999.83 682 997.33 683 994 683 c
836 683 994 683 836 683 c
828 683 822 679.33 818 672 c
474 99 818 672 474 99 c
417 672 474 99 417 672 c
415.67 679.33 411.33 683 404 683 c
246 683 404 683 246 683 c
239.33 683 234.67 679.33 232 672 c
230 664 232 672 230 664 c
228.67 656.67 231.67 653 239 653 c
254.33 653 268.83 652.67 282.5 652 c
296.17 651.33 305.67 649.33 311 645.98 c
316.33 643.32 317 633.64 313 616.94 c
182 93.09 313 616.94 182 93.09 c
179.33 83.75 175.5 74.9 170.5 66.55 c
165.5 58.21 159 51.36 151 46.03 c
141 39.35 130.33 35.01 119 33.01 c
107.67 31 95.67 30 83 30 c
75.67 30 71 26.13 69 18.39 c
67 10.64 69 18.39 67 10.64 c
65.67 7.42 65.83 4.84 67.5 2.91 c
69.17 0.97 71.67 0 75 0 c
143 4 209.67 4 275 0 c
278.33 0 281.33 0.97 284 2.91 c
286.67 4.84 288.33 7.42 289 10.64 c
291 18.39 289 10.64 291 18.39 c
293 26.13 290.33 30 283 30 c
270.33 30 258.83 31 248.5 33 c
238.17 35 229.67 39.33 223 46 c
217.67 51.33 214.5 58.17 213.5 66.5 c
212.5 74.83 213.33 83.67 216 93 c
351 635 216 93 351 635 c
413 10.64 351 635 413 10.64 c
414.33 3.55 418.67 0 426 0 c
431 0 426 0 431 0 c
439 0 445 3.55 449 10.64 c
829 643 449 10.64 829 643 c
684 66 829 643 684 66 c
680 50 674.33 40 667 36 c
659.67 32.67 649.17 30.83 635.5 30.5 c
621.83 30.17 607.33 30 592 30 c
584.67 30 580 26.13 578 18.39 c
576 10.64 578 18.39 576 10.64 c
574.67 3.55 577.33 0 584 0 c
665.33 4 745 4 823 0 c
826.33 0 829.33 0.97 832 2.91 c
834.67 4.84 836.33 7.42 837 10.64 c
839 18.39 837 10.64 839 18.39 c
841 26.13 838.33 30 831 30 c
815.67 30 801.17 30.17 787.5 30.5 c
773.83 30.83 764.33 32.67 759 36.01 c
753.67 39.35 753 49.36 757 66.06 c
894 616.94 757 66.06 894 616.94 c
898 632.97 903.67 642.65 911 645.99 c
918.33 649.33 929 651.33 943 652 c
957 652.67 971.67 653 987 653 c
994.33 653 998.67 656.67 1000 664 c
1002 672 1000 664 1002 672 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC4_EuclidItalic exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.526093 0.528565 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.456201 -0 0 -0.454068 0 1117.9] concat
gs
893 2223 m
893 -3 l
3 sw
0.502 0.502 0.502 rgb
1 sj
1 scap
st
1440 2223 m
1440 -3 l
st
1988 2223 m
1988 -3 l
st
2535 2223 m
2535 -3 l
st
3082 2223 m
3082 -3 l
st
346 1921 m
3219 1921 l
st
346 1618 m
3219 1618 l
st
346 1316 m
3219 1316 l
st
346 1013 m
3219 1013 l
st
346 711 m
3219 711 l
st
346 408 m
3219 408 l
st
346 106 m
3219 106 l
st
346 2223 m
3219 2223 l
8 sw
0 0 0 rgb
st
483 2223 m
483 2244 l
st
620 2223 m
620 2244 l
st
756 2223 m
756 2244 l
st
1030 2223 m
1030 2244 l
st
1167 2223 m
1167 2244 l
st
1304 2223 m
1304 2244 l
st
1577 2223 m
1577 2244 l
st
1714 2223 m
1714 2244 l
st
1851 2223 m
1851 2244 l
st
2125 2223 m
2125 2244 l
st
2261 2223 m
2261 2244 l
st
2398 2223 m
2398 2244 l
st
2672 2223 m
2672 2244 l
st
2809 2223 m
2809 2244 l
st
2945 2223 m
2945 2244 l
st
3219 2223 m
3219 2244 l
st
346 2223 m
346 2264 l
st
893 2223 m
893 2264 l
st
1440 2223 m
1440 2264 l
st
1988 2223 m
1988 2264 l
st
2535 2223 m
2535 2264 l
st
3082 2223 m
3082 2264 l
st
346 2223 m
346 -3 l
st
346 2163 m
325 2163 l
st
346 2102 m
325 2102 l
st
346 2042 m
325 2042 l
st
346 1981 m
325 1981 l
st
346 1860 m
325 1860 l
st
346 1800 m
325 1800 l
st
346 1739 m
325 1739 l
st
346 1679 m
325 1679 l
st
346 1558 m
325 1558 l
st
346 1497 m
325 1497 l
st
346 1437 m
325 1437 l
st
346 1376 m
325 1376 l
st
346 1255 m
325 1255 l
st
346 1195 m
325 1195 l
st
346 1134 m
325 1134 l
st
346 1074 m
325 1074 l
st
346 953 m
325 953 l
st
346 892 m
325 892 l
st
346 832 m
325 832 l
st
346 771 m
325 771 l
st
346 650 m
325 650 l
st
346 590 m
325 590 l
st
346 529 m
325 529 l
st
346 469 m
325 469 l
st
346 348 m
325 348 l
st
346 287 m
325 287 l
st
346 227 m
325 227 l
st
346 166 m
325 166 l
st
346 45 m
325 45 l
st
346 2223 m
305 2223 l
st
346 1921 m
305 1921 l
st
346 1618 m
305 1618 l
st
346 1316 m
305 1316 l
st
346 1013 m
305 1013 l
st
346 711 m
305 711 l
st
346 408 m
305 408 l
st
346 106 m
305 106 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 244 -2337 m
(0.000)[45 25 45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 791 -2337 m
(0.200)[45 25 45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 1338 -2337 m
(0.400)[45 25 45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 1886 -2337 m
(0.600)[45 25 45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 2433 -2337 m
(0.800)[45 25 45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 2980 -2337 m
(1.000)[45 25 45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 231 -2230 m
(0)[45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 186 -1928 m
(50)[45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 141 -1625 m
(100)[45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 141 -1323 m
(150)[45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 141 -1020 m
(200)[45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 141 -718 m
(250)[45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 141 -415 m
(300)[45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Euclid 90 self 141 -113 m
(350)[45 45 45 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 346 -3 2874 2227 np rectpath
/eocl cland
np exec
346 2223 m
346 2223 m
359 2213 l
372 2202 l
385 2192 l
398 2182 l
411 2172 l
424 2161 l
437 2151 l
450 2141 l
463 2130 l
476 2120 l
489 2110 l
502 2099 l
515 2089 l
528 2079 l
541 2069 l
554 2058 l
567 2048 l
580 2038 l
593 2027 l
606 2017 l
619 2007 l
620 2006 l
633 1996 l
646 1985 l
659 1975 l
672 1965 l
685 1954 l
698 1944 l
711 1934 l
724 1923 l
737 1913 l
750 1903 l
763 1893 l
776 1882 l
789 1872 l
802 1862 l
815 1851 l
828 1841 l
841 1831 l
854 1821 l
867 1810 l
880 1800 l
893 1790 l
906 1780 l
919 1770 l
932 1760 l
945 1749 l
958 1739 l
971 1729 l
984 1719 l
997 1709 l
1010 1699 l
1023 1689 l
1036 1679 l
1049 1668 l
1062 1658 l
1075 1648 l
1088 1638 l
1101 1627 l
1114 1617 l
1127 1607 l
1140 1597 l
1153 1586 l
1166 1576 l
1167 1575 l
1180 1564 l
1193 1554 l
1206 1543 l
1219 1533 l
1232 1522 l
1245 1511 l
1258 1501 l
1271 1490 l
1284 1479 l
1297 1468 l
1310 1458 l
1323 1447 l
1336 1436 l
1349 1425 l
1362 1415 l
1375 1404 l
1388 1393 l
1401 1383 l
1414 1372 l
1427 1362 l
1440 1351 l
1453 1341 l
1466 1330 l
1479 1320 l
1492 1309 l
1505 1299 l
1518 1289 l
1531 1279 l
1544 1268 l
1557 1258 l
1570 1248 l
1583 1238 l
1596 1227 l
1609 1217 l
1622 1207 l
1635 1197 l
1648 1187 l
1661 1177 l
1674 1166 l
1687 1156 l
1700 1146 l
1713 1136 l
1714 1135 l
1727 1125 l
1740 1115 l
1753 1104 l
1766 1094 l
1779 1084 l
1792 1074 l
1805 1063 l
1818 1053 l
1831 1043 l
1844 1032 l
1857 1022 l
1870 1012 l
1883 1001 l
1896 991 l
1909 981 l
1922 970 l
1935 960 l
1948 949 l
1961 939 l
1974 928 l
1987 918 l
1988 917 l
2001 906 l
2014 896 l
2027 885 l
2040 875 l
2053 864 l
2066 854 l
2079 843 l
2092 832 l
2105 822 l
2118 811 l
2131 801 l
2144 790 l
2157 779 l
2170 769 l
2183 758 l
2196 748 l
2209 737 l
2222 727 l
2235 716 l
2248 705 l
2261 695 l
2274 684 l
2287 674 l
2300 664 l
2313 653 l
2326 643 l
2339 632 l
2352 622 l
2365 612 l
2378 601 l
2391 591 l
2404 581 l
2417 571 l
2430 561 l
2443 550 l
2456 540 l
2469 530 l
2482 520 l
2495 510 l
2508 500 l
2521 491 l
2534 481 l
2535 480 l
2548 470 l
2561 461 l
2574 451 l
2587 442 l
2600 432 l
2613 423 l
2626 413 l
2639 404 l
2652 394 l
2665 385 l
2678 375 l
2691 366 l
2704 356 l
2717 347 l
2730 337 l
2743 328 l
2756 318 l
2769 309 l
2782 299 l
2795 289 l
2808 280 l
2809 279 l
2822 269 l
2835 259 l
2848 249 l
2861 239 l
2874 229 l
2887 219 l
2900 209 l
2913 199 l
2926 188 l
2939 178 l
2952 168 l
2965 157 l
2978 147 l
2991 137 l
3004 126 l
3017 116 l
3030 106 l
3043 95 l
3056 85 l
3069 74 l
3082 64 l
3 sw
1 0 0 rgb
st
346 2205 m
346 2241 l
0 0 0 rgb
st
328 2223 m
364 2223 l
st
620 1988 m
620 2024 l
st
602 2006 m
638 2006 l
st
893 1772 m
893 1808 l
st
875 1790 m
911 1790 l
st
1167 1557 m
1167 1593 l
st
1149 1575 m
1185 1575 l
st
1440 1333 m
1440 1369 l
st
1422 1351 m
1458 1351 l
st
1714 1117 m
1714 1153 l
st
1696 1135 m
1732 1135 l
st
1988 899 m
1988 935 l
st
1970 917 m
2006 917 l
st
2261 677 m
2261 713 l
st
2243 695 m
2279 695 l
st
2535 462 m
2535 498 l
st
2517 480 m
2553 480 l
st
2809 261 m
2809 297 l
st
2791 279 m
2827 279 l
st
3082 46 m
3082 82 l
st
3064 64 m
3100 64 l
st
gr
gs
gs
1 -1 sc
119 -1234 tr
90 ro
/MC2_EuclidItalic 90 self 0 0 m
(B)[63 ] xs
1 -1 sc
gr
gs
1 -1 sc
119 -1171 tr
90 ro
/MC3_Euclid 90 self 0 0 m
(/mT)[45 75 65 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC4_EuclidItalic 90 self 1646 -2401 m
(I)[35 ] xs
1 -1 sc
1 -1 sc
/MC4_EuclidItalic 54 self 1681 -2433 m
(M)[48 ] xs
1 -1 sc
1 -1 sc
/MC1_Euclid 90 self 1729 -2401 m
(/A)[45 67 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
